import type { KPIData, Occurrence, Region, MapFilter } from '../schemas';

// üîÑ Mock Data (simulando API real)
const mockKPIs: KPIData = {
  critical: { value: 47, trend: 12 },
  monitoring: { value: 156, trend: -8 },
  resolved: { value: 289, trend: 24 },
  predictions: { value: 78, accuracy: 92 }
};

const mockOccurrences: Occurrence[] = [
  {
    id: '1',
    type: 'lighting',
    count: 45,
    priority: 'high',
    region: 'Taguatinga',
    description: 'Ilumina√ß√£o p√∫blica deficiente na regi√£o central',
    lat: -15.8386,
    lng: -48.0494,
    status: 'pending',
    createdAt: new Date('2024-01-01'),
    updatedAt: new Date('2024-01-15'),
  },
  {
    id: '2',
    type: 'waste',
    count: 32,
    priority: 'medium',
    region: 'Ceil√¢ndia',
    description: 'Ac√∫mulo de lixo em pontos espec√≠ficos',
    lat: -15.8159,
    lng: -48.1070,
    status: 'in_progress',
    createdAt: new Date('2024-01-02'),
    updatedAt: new Date('2024-01-16'),
  },
  {
    id: '3',
    type: 'construction',
    count: 28,
    priority: 'high',
    region: 'Sobradinho',
    description: 'Constru√ß√µes irregulares identificadas',
    lat: -15.6533,
    lng: -47.7869,
    status: 'pending',
    createdAt: new Date('2024-01-03'),
    updatedAt: new Date('2024-01-17'),
  },
  {
    id: '4',
    type: 'degraded',
    count: 18,
    priority: 'low',
    region: 'Plano Piloto',
    description: '√Åreas com degrada√ß√£o urbana',
    lat: -15.7801,
    lng: -47.9292,
    status: 'resolved',
    createdAt: new Date('2024-01-04'),
    updatedAt: new Date('2024-01-18'),
  },
];

const mockRegions: Region[] = [
  {
    id: '1',
    name: 'Taguatinga',
    lat: -15.8386,
    lng: -48.0494,
    occurrences: 45,
    status: 'critical',
  },
  {
    id: '2',
    name: 'Ceil√¢ndia',
    lat: -15.8159,
    lng: -48.1070,
    occurrences: 32,
    status: 'warning',
  },
  {
    id: '3',
    name: 'Sobradinho',
    lat: -15.6533,
    lng: -47.7869,
    occurrences: 28,
    status: 'warning',
  },
  {
    id: '4',
    name: 'Plano Piloto',
    lat: -15.7801,
    lng: -47.9292,
    occurrences: 18,
    status: 'normal',
  },
];

// ü§ñ AI Response Templates e Sistema Inteligente de Conversa√ß√£o
const contextKeywords = {
  // Contexto v√°lido do projeto
  urban: ['urbana', 'cidade', 'p√∫blico', 'infraestrutura', 'munic√≠pio', 'regi√£o', '√°rea'],
  safety: ['seguran√ßa', 'crime', 'viol√™ncia', 'patrulhamento', 'policial', 'ilumina√ß√£o'],
  environment: ['lixo', 'res√≠duo', 'limpeza', 'coleta', 'ambiental', 'polui√ß√£o'],
  infrastructure: ['ilumina√ß√£o', 'energia', 'el√©trica', 'poste', 'luz', 'constru√ß√£o', 'obra'],
  prevention: ['preven√ß√£o', 'preventivo', 'antecipar', 'evitar', 'prevenir'],
  data: ['dados', 'sat√©lite', 'an√°lise', 'insight', 'relat√≥rio', 'estat√≠stica', 'tend√™ncia'],
  prediction: ['previs√£o', 'futuro', 'pr√≥ximo', 'prever', 'proje√ß√£o', 'estimativa'],
  action: ['a√ß√£o', 'recomenda√ß√£o', 'sugest√£o', 'resolver', 'solu√ß√£o', 'implementar'],
  location: ['bras√≠lia', 'df', 'distrito federal', 'taguatinga', 'ceil√¢ndia', 'sobradinho', 'plano piloto', 'asa norte', 'asa sul'],
  
  // Contextos fora do escopo
  personal: ['pessoal', 'fam√≠lia', 'relacionamento', 'amor', 'casamento', 'filhos'],
  entertainment: ['filme', 'm√∫sica', 'game', 'jogo', 's√©rie', 'tv', 'celebridade'],
  food: ['comida', 'receita', 'cozinhar', 'restaurante', 'culin√°ria'],
  sports: ['futebol', 'esporte', 'jogo', 'time', 'campeonato'],
  weather: ['tempo', 'clima', 'chuva', 'sol', 'temperatura'],
  technology: ['programa√ß√£o', 'c√≥digo', 'software', 'app', 'computador', 'celular'],
  health: ['sa√∫de', 'm√©dico', 'doen√ßa', 'rem√©dio', 'hospital'],
  finance: ['dinheiro', 'investimento', 'banco', 'empr√©stimo', 'economia'],
};

const responses = {
  // Respostas espec√≠ficas por categoria
  critical_areas: [
    "Com base na an√°lise dos dados, identifiquei que a regi√£o de **Taguatinga** apresenta o maior n√∫mero de ocorr√™ncias cr√≠ticas (45), principalmente relacionadas √† ilumina√ß√£o p√∫blica deficiente. Recomendo priorizar a√ß√µes de melhoria na infraestrutura de ilumina√ß√£o dessa regi√£o.",
    "A an√°lise satelital indica que **Ceil√¢ndia** tem 32 pontos cr√≠ticos de ac√∫mulo de lixo. Os dados mostram correla√ß√£o entre √°reas mal iluminadas e maior incid√™ncia de deposi√ß√£o irregular de res√≠duos.",
    "**Sobradinho** apresenta 28 ocorr√™ncias relacionadas a constru√ß√µes irregulares. Nossos algoritmos detectaram expans√µes n√£o autorizadas atrav√©s de imagens de sat√©lite comparativas."
  ],
  
  trends: [
    "Os dados mostram uma tend√™ncia de **aumento de 12%** nas ocorr√™ncias cr√≠ticas em rela√ß√£o ao m√™s anterior. As principais causas est√£o relacionadas a: 1) Ilumina√ß√£o prec√°ria (35%), 2) Lixo acumulado (26%), 3) Constru√ß√µes irregulares (22%), 4) √Åreas degradadas (17%).",
    "**An√°lise temporal:** Identificamos padr√µes sazonais nas ocorr√™ncias urbanas. Durante o per√≠odo chuvoso, h√° aumento de 40% nos problemas de drenagem e ac√∫mulo de lixo.",
    "A correla√ß√£o entre baixa ilumina√ß√£o e incid√™ncia criminal √© de **73%**. √Åreas com melhorias na ilumina√ß√£o p√∫blica reduziram crimes noturnos em 28%."
  ],
  
  predictions: [
    "Para o pr√≥ximo m√™s, nossos modelos de IA preveem um poss√≠vel aumento nas ocorr√™ncias de **lixo acumulado** na regi√£o de Ceil√¢ndia, com base em padr√µes hist√≥ricos e eventos sazonais. Sugiro implementar a√ß√µes preventivas de coleta intensificada.",
    "**Modelo de Risco de Inc√™ndio:** Detectamos 5 √°reas com alta probabilidade de inc√™ndio nos pr√≥ximos 7 dias, com base em dados meteorol√≥gicos e vegeta√ß√£o seca (confian√ßa: 87%).",
    "**Predi√ß√£o Criminal:** Nosso algoritmo indica aumento de 15% nos crimes noturnos na Asa Norte caso n√£o haja melhoria na ilumina√ß√£o p√∫blica at√© o final do m√™s."
  ],
  
  recommendations: [
    "**Recomenda√ß√µes priorit√°rias:**\n\n1. **Ilumina√ß√£o**: Instalar 150 novos pontos de luz em Taguatinga\n2. **Limpeza**: Ampliar coleta em Ceil√¢ndia em 40%\n3. **Fiscaliza√ß√£o**: Intensificar monitoramento de constru√ß√µes em Sobradinho\n4. **Investimento estimado**: R$ 2,3 milh√µes para resolver 80% das ocorr√™ncias cr√≠ticas",
    "**Plano de A√ß√£o Emergencial:**\n\n‚Ä¢ **Fase 1** (7 dias): Instalar ilumina√ß√£o tempor√°ria nas 12 √°reas mais cr√≠ticas\n‚Ä¢ **Fase 2** (30 dias): Implementar coleta intensiva de res√≠duos\n‚Ä¢ **Fase 3** (90 dias): Fiscaliza√ß√£o e regulariza√ß√£o de constru√ß√µes",
    "**Estrat√©gia Preventiva:**\n\n- Monitoramento satelital semanal\n- Sistema de alertas autom√°ticos\n- Parcerias com comunidades locais\n- **ROI esperado**: 300% em redu√ß√£o de custos de manuten√ß√£o"
  ],
  
  data_analysis: [
    "**An√°lise Satelital Recente:**\n\nüìä **Sentinel-2**: 127 pontos de lixo detectados\nüõ∞Ô∏è **VIIRS**: 89 √°reas mal iluminadas\nüî• **MODIS**: 12 alertas de risco de inc√™ndio\nüíß **SRTM**: 5 √°reas de risco de inunda√ß√£o",
    "**Performance dos Modelos:**\n\n‚Ä¢ Crime Prediction: 87.3% precis√£o\n‚Ä¢ Fire Risk: 91.8% precis√£o\n‚Ä¢ Flood Risk: 84.2% precis√£o\n‚Ä¢ Urban Disorder: 93.1% precis√£o",
    "**Dados em Tempo Real:**\nProcessamos 2.156 imagens satelitais nas √∫ltimas 24h, identificando 47 novas ocorr√™ncias que requerem aten√ß√£o imediata."
  ],
  
  methodology: [
    "**Nossa Metodologia:**\n\nüõ∞Ô∏è Utilizamos dados de m√∫ltiplos sat√©lites (Sentinel-2, MODIS, VIIRS)\nü§ñ Algoritmos de ML para detec√ß√£o de padr√µes\nüìä Correla√ß√£o com dados abertos governamentais\n‚ö° Processamento em tempo real para alertas",
    "**Tecnologias Aplicadas:**\n\n‚Ä¢ Computer Vision para an√°lise de imagens\n‚Ä¢ Redes Neurais para predi√ß√µes\n‚Ä¢ An√°lise geoespacial avan√ßada\n‚Ä¢ APIs de dados abertos (SSP, INMET, IBGE)"
  ],
  
  // Respostas para contextos fora do escopo
  out_of_scope: [
    "Desculpe, mas sou especializado em an√°lise de desordens urbanas e gest√£o de cidades. Posso ajudar com quest√µes sobre infraestrutura urbana, seguran√ßa p√∫blica, gest√£o de res√≠duos, ilumina√ß√£o p√∫blica ou an√°lise preditiva de problemas urbanos. Como posso auxiliar nessas √°reas?",
    "Entendo sua pergunta, mas meu foco √© auxiliar com quest√µes relacionadas √† gest√£o urbana e an√°lise de dados satelitais. Posso fornecer insights sobre:\n\n‚Ä¢ An√°lise de ocorr√™ncias urbanas\n‚Ä¢ Predi√ß√µes de risco\n‚Ä¢ Recomenda√ß√µes de a√ß√£o\n‚Ä¢ Dados de infraestrutura\n\nSobre qual desses temas gostaria de saber mais?",
    "Minha expertise est√° focada em problemas urbanos e an√°lise preditiva de cidades. N√£o posso ajudar com esse tipo de quest√£o, mas posso analisar dados sobre seguran√ßa p√∫blica, infraestrutura, limpeza urbana ou fazer previs√µes baseadas em dados satelitais. O que gostaria de saber sobre a gest√£o urbana?"
  ],
  
  clarification: [
    "Entendi sua pergunta. Com base nos dados dispon√≠veis, posso fornecer insights espec√≠ficos sobre as desordens urbanas no Distrito Federal. Voc√™ gostaria de saber sobre algum aspecto espec√≠fico como tend√™ncias, previs√µes ou recomenda√ß√µes de a√ß√£o?",
    "Posso detalhar melhor essa informa√ß√£o. Sobre qual aspecto espec√≠fico voc√™ gostaria de mais detalhes? Por exemplo:\n\n‚Ä¢ Dados t√©cnicos e metodologia\n‚Ä¢ Cronograma de implementa√ß√£o\n‚Ä¢ An√°lise de custos\n‚Ä¢ Impacto esperado",
    "Interessante quest√£o! Para dar uma resposta mais precisa, voc√™ poderia especificar:\n\n‚Ä¢ Regi√£o espec√≠fica de interesse?\n‚Ä¢ Per√≠odo temporal (atual, hist√≥rico, futuro)?\n‚Ä¢ Tipo de an√°lise (t√©cnica, financeira, operacional)?"
  ],
  
  greeting: [
    "Ol√°! Sou seu assistente IA especializado em an√°lise de desordens urbanas. Posso ajudar voc√™ a entender dados de sat√©lites, gerar insights preditivos e recomendar a√ß√µes. Como posso ajudar?",
    "Oi! Estou aqui para auxiliar com an√°lises urbanas baseadas em dados satelitais. Posso fornecer:\n\n‚Ä¢ An√°lise de √°reas cr√≠ticas\n‚Ä¢ Previs√µes de risco\n‚Ä¢ Recomenda√ß√µes de a√ß√£o\n‚Ä¢ Insights de dados\n\nO que voc√™ gostaria de saber?",
    "Ol√°! Sou especialista em an√°lise preditiva urbana. Tenho acesso a dados de sat√©lites, modelos de IA e informa√ß√µes em tempo real sobre o Distrito Federal. Como posso auxiliar sua gest√£o urbana hoje?"
  ],
  
  thanks: [
    "Fico feliz em ajudar! Se tiver mais d√∫vidas sobre an√°lise urbana, previs√µes ou recomenda√ß√µes, estarei aqui. üòä",
    "Por nada! √â para isso que estou aqui. Sempre que precisar de insights sobre gest√£o urbana ou an√°lise de dados, pode contar comigo!",
    "Foi um prazer ajudar! Minha miss√£o √© tornar a gest√£o urbana mais eficiente atrav√©s da an√°lise inteligente de dados. At√© mais!"
  ]
};

// üöÄ API Service Class
export class OrbisAPIService {
  private static instance: OrbisAPIService;
  
  public static getInstance(): OrbisAPIService {
    if (!OrbisAPIService.instance) {
      OrbisAPIService.instance = new OrbisAPIService();
    }
    return OrbisAPIService.instance;
  }

  // üìä Get KPIs
  async getKPIs(): Promise<KPIData> {
    // Simulate API delay
    await this.sleep(800);
    return mockKPIs;
  }

  // üéØ Get Occurrences
  async getOccurrences(filter?: MapFilter): Promise<Occurrence[]> {
    await this.sleep(600);
    
    let filtered = [...mockOccurrences];
    
    if (filter?.type && filter.type !== 'all') {
      if (filter.type === 'critical') {
        filtered = filtered.filter(o => o.priority === 'high');
      } else {
        filtered = filtered.filter(o => o.type === filter.type);
      }
    }
    
    if (filter?.region) {
      filtered = filtered.filter(o => 
        o.region.toLowerCase().includes(filter.region!.toLowerCase())
      );
    }
    
    return filtered;
  }

  // üó∫Ô∏è Get Regions
  async getRegions(): Promise<Region[]> {
    await this.sleep(500);
    return mockRegions;
  }

  // ü§ñ Ask AI - Sistema Inteligente de Conversa√ß√£o
  async askAI(question: string): Promise<string> {
    await this.sleep(1500); // Simulate AI processing time
    
    const lowerQuestion = question.toLowerCase();
    
    // 1. Verificar tentativas maliciosas ou comandos
    if (this.isMaliciousOrCommand(lowerQuestion)) {
      return "üîí **Sistema Protegido** \n\nSou um assistente especializado em an√°lise urbana. N√£o posso executar comandos do sistema ou responder a tentativas de acesso n√£o autorizado.\n\n‚úÖ **Posso ajudar com:**\n‚Ä¢ An√°lise de dados urbanos\n‚Ä¢ Insights preditivos\n‚Ä¢ Recomenda√ß√µes de gest√£o\n‚Ä¢ Relat√≥rios t√©cnicos\n\nComo posso auxiliar sua gest√£o urbana de forma leg√≠tima?";
    }
    
    // 2. Verificar se est√° fora do contexto
    if (this.isOutOfScope(lowerQuestion)) {
      return this.getRandomResponse(responses.out_of_scope);
    }
    
    // 3. Detectar sauda√ß√µes
    if (this.matchesKeywords(lowerQuestion, ['ol√°', 'oi', 'ola', 'bom dia', 'boa tarde', 'boa noite', 'in√≠cio', 'come√ßar'])) {
      return this.getRandomResponse(responses.greeting);
    }
    
    // 4. Detectar agradecimentos
    if (this.matchesKeywords(lowerQuestion, ['obrigado', 'obrigada', 'valeu', 'brigad√£o', 'thanks', 'thx'])) {
      return this.getRandomResponse(responses.thanks);
    }
    
    // 5. An√°lise por categorias espec√≠ficas  
    if (this.matchesKeywords(lowerQuestion, ['cr√≠tica', 'pior', 'grave', 'urgente', 'emergencial', 'priorit√°rio'])) {
      return this.getRandomResponse(responses.critical_areas);
    }
    
    // 5.1 Perguntas espec√≠ficas sobre regi√µes
    if (this.matchesKeywords(lowerQuestion, ['taguatinga'])) {
      return "**An√°lise Espec√≠fica - Taguatinga:**\n\nüìç **Status Atual:** 45 ocorr√™ncias cr√≠ticas identificadas\nüö® **Prioridade:** ALTA - Ilumina√ß√£o p√∫blica deficiente\nüìä **Dados Satelitais:** NASA VIIRS detectou 23 pontos sem ilumina√ß√£o adequada\nüí° **A√ß√£o Recomendada:** Instala√ß√£o emergencial de 150 pontos de luz\nüí∞ **Investimento:** R$ 890 mil\n‚è∞ **Prazo:** 30 dias para reduzir 70% das ocorr√™ncias";
    }
    
    if (this.matchesKeywords(lowerQuestion, ['ceil√¢ndia'])) {
      return "**An√°lise Espec√≠fica - Ceil√¢ndia:**\n\nüìç **Status Atual:** 32 pontos cr√≠ticos de ac√∫mulo de lixo\nüóëÔ∏è **Problema Principal:** Deposi√ß√£o irregular de res√≠duos\nüõ∞Ô∏è **Detec√ß√£o:** Sentinel-2 identificou padr√£o de crescimento de 15% ao m√™s\nüöõ **Solu√ß√£o:** Ampliar coleta em 40% + 3 ecopontos\nüí∞ **Custo:** R$ 340 mil (setup) + R$ 85 mil/m√™s\nüìà **Resultado Esperado:** Redu√ß√£o de 60% em 45 dias";
    }
    
    if (this.matchesKeywords(lowerQuestion, ['tend√™ncia', 'aumento', 'padr√£o', 'hist√≥rico', 'compara√ß√£o', 'evolu√ß√£o'])) {
      return this.getRandomResponse(responses.trends);
    }
    
    if (this.matchesKeywords(lowerQuestion, ['previs√£o', 'futuro', 'pr√≥ximo', 'prever', 'proje√ß√£o', 'estimativa', 'vai acontecer'])) {
      return this.getRandomResponse(responses.predictions);
    }
    
    if (this.matchesKeywords(lowerQuestion, ['recomenda√ß√£o', 'a√ß√£o', 'sugest√£o', 'resolver', 'solu√ß√£o', 'como fazer', 'plano'])) {
      return this.getRandomResponse(responses.recommendations);
    }
    
    if (this.matchesKeywords(lowerQuestion, ['dados', 'an√°lise', 'relat√≥rio', 'estat√≠stica', 'n√∫meros', 'm√©trica'])) {
      return this.getRandomResponse(responses.data_analysis);
    }
    
    if (this.matchesKeywords(lowerQuestion, ['como', 'metodologia', 'algoritmo', 'modelo', 'tecnologia', 'funciona'])) {
      return this.getRandomResponse(responses.methodology);
    }
    
    // 5.2 Perguntas sobre precis√£o e confiabilidade
    if (this.matchesKeywords(lowerQuestion, ['precis√£o', 'confian√ßa', 'confiabilidade', 'acur√°cia', 'erro'])) {
      return "**Precis√£o dos Nossos Modelos:**\n\nüéØ **Crime Prediction:** 87.3% de precis√£o\nüî• **Fire Risk Model:** 91.8% de precis√£o\nüíß **Flood Risk Model:** 84.2% de precis√£o\nüèôÔ∏è **Urban Disorder:** 93.1% de precis√£o\n\n**Como medimos:**\n‚Ä¢ Valida√ß√£o cruzada com dados hist√≥ricos\n‚Ä¢ Compara√ß√£o com eventos reais\n‚Ä¢ Atualiza√ß√£o cont√≠nua dos algoritmos\n‚Ä¢ Margem de erro calculada estatisticamente\n\n*Nossos modelos s√£o retreinados semanalmente com novos dados.*";
    }
    
    if (this.matchesKeywords(lowerQuestion, ['custo', 'pre√ßo', 'or√ßamento', 'investimento', 'valor', 'dinheiro'])) {
      return "**An√°lise de Custos e ROI:**\n\nüí∞ **Investimentos T√≠picos:**\n‚Ä¢ Ilumina√ß√£o: R$ 2.500-4.000 por ponto\n‚Ä¢ Sistema de coleta: R$ 250-400 mil/regi√£o\n‚Ä¢ Vigil√¢ncia eletr√¥nica: R$ 15-25 mil/c√¢mera\n‚Ä¢ Fiscaliza√ß√£o: R$ 180 mil/equipe anual\n\nüìä **Retorno do Investimento:**\n‚Ä¢ Redu√ß√£o de 40% nos custos de manuten√ß√£o\n‚Ä¢ Economia de 60% em a√ß√µes corretivas\n‚Ä¢ **ROI m√©dio:** 280% em 2 anos\n‚Ä¢ Preven√ß√£o > Corre√ß√£o (economia de 3:1)\n\n*Cada R$ 1 investido em preven√ß√£o economiza R$ 3 em corre√ß√µes.*";
    }
    
    // 6. Resposta de esclarecimento para contexto v√°lido mas n√£o espec√≠fico
    if (this.isValidUrbanContext(lowerQuestion)) {
      return this.getRandomResponse(responses.clarification);
    }
    
    // 7. Default - redirecionar para contexto urbano
    return this.getRandomResponse(responses.out_of_scope);
  }
  
  // üîç M√©todos auxiliares para an√°lise de contexto
  private isMaliciousOrCommand(question: string): boolean {
    const maliciousKeywords = [
      // Comandos de sistema
      'sudo', 'rm -rf', 'delete', 'drop table', 'exec', 'eval', 'system',
      // Tentativas de injection
      'script', 'alert', 'prompt', 'console.log', '<script>', 'javascript:',
      // Comandos SQL
      'select *', 'union select', 'insert into', 'update set',
      // Tentativas de bypass
      'ignore previous', 'forget', 'override', 'bypass', 'jailbreak',
      // Roleplay malicioso
      'pretend you are', 'act as', 'roleplay', 'simulate being'
    ];
    
    return maliciousKeywords.some(keyword => question.includes(keyword));
  }

  private isOutOfScope(question: string): boolean {
    const outOfScopeCategories = ['personal', 'entertainment', 'food', 'sports', 'technology', 'health', 'finance'];
    
    for (const category of outOfScopeCategories) {
      if (this.matchesKeywords(question, contextKeywords[category as keyof typeof contextKeywords])) {
        return true;
      }
    }
    
    return false;
  }
  
  private isValidUrbanContext(question: string): boolean {
    const validCategories = ['urban', 'safety', 'environment', 'infrastructure', 'prevention', 'data', 'prediction', 'action', 'location'];
    
    for (const category of validCategories) {
      if (this.matchesKeywords(question, contextKeywords[category as keyof typeof contextKeywords])) {
        return true;
      }
    }
    
    return false;
  }
  
  private matchesKeywords(text: string, keywords: string[]): boolean {
    return keywords.some(keyword => text.includes(keyword));
  }
  
  private getRandomResponse(responseArray: string[]): string {
    const randomIndex = Math.floor(Math.random() * responseArray.length);
    return responseArray[randomIndex];
  }

  // üîß Utility method
  private sleep(ms: number): Promise<void> {
    return new Promise(resolve => setTimeout(resolve, ms));
  }
}

// Export singleton instance
export const orbisAPI = OrbisAPIService.getInstance(); 